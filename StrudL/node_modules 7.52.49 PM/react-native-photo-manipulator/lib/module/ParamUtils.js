/**
 * Parameter Utilities Class
 */
import { Image } from 'react-native';
import parse from 'parse-color';
/**
 * Convert color string to rgba object
 * @param color
 */
export const toColorNative = color => {
  if (color !== undefined && typeof color !== 'string') {
    return color;
  }
  const result = parse(color || '#000000').rgba;
  return {
    r: result[0],
    g: result[1],
    b: result[2],
    a: result[3] * 255
  };
};
export const toImageNative = source => typeof source === 'string' ? source : Image.resolveAssetSource(source).uri;
export const toTextOptionsNative = it => ({
  ...it,
  color: toColorNative(it.color),
  thickness: it.thickness || 0,
  rotation: it.rotation || 0,
  shadowRadius: it.shadowRadius || 0,
  shadowColor: it.shadowColor && toColorNative(it.shadowColor)
});
export const toBatchNative = it => {
  if (it.operation === 'text') {
    return {
      ...it,
      options: toTextOptionsNative(it.options)
    };
  } else if (it.operation === 'overlay') {
    return {
      ...it,
      overlay: toImageNative(it.overlay)
    };
  } else if (it.operation === 'flip') {
    return {
      ...it
    };
  }
  return it;
};
//# sourceMappingURL=ParamUtils.js.map