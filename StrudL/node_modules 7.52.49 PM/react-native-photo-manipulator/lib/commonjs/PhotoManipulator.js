"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var ParamUtils = _interopRequireWildcard(require("./ParamUtils"));
var _PhotoManipulatorTypes = require("./PhotoManipulatorTypes");
var _NativeRNPhotoManipulator = _interopRequireDefault(require("./NativeRNPhotoManipulator"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// React Native sets `__turboModuleProxy` on global when TurboModules are enabled.
// Currently, this is the recommended way to detect TurboModules.
// https://reactnative.dev/docs/the-new-architecture/backward-compatibility-turbomodules#unify-the-javascript-specs

// @ts-ignore
const isTurboModuleEnabled = global.__turboModuleProxy != null;
const RNPhotoManipulator = isTurboModuleEnabled ? _NativeRNPhotoManipulator.default : _reactNative.NativeModules.RNPhotoManipulator;
const PhotoManipulator = {
  batch: (image, operations, cropRegion, targetSize, quality = 100, mimeType = _PhotoManipulatorTypes.MimeType.JPEG) => {
    return RNPhotoManipulator.batch(ParamUtils.toImageNative(image), operations.map(ParamUtils.toBatchNative), cropRegion, targetSize, quality, mimeType);
  },
  crop: (image, cropRegion, targetSize, mimeType = _PhotoManipulatorTypes.MimeType.JPEG) => RNPhotoManipulator.crop(ParamUtils.toImageNative(image), cropRegion, targetSize, mimeType),
  flipImage: (image, mode, mimeType = _PhotoManipulatorTypes.MimeType.JPEG) => RNPhotoManipulator.flipImage(ParamUtils.toImageNative(image), mode, mimeType),
  rotateImage: (image, mode, mimeType = _PhotoManipulatorTypes.MimeType.JPEG) => RNPhotoManipulator.rotateImage(ParamUtils.toImageNative(image), mode, mimeType),
  overlayImage: (image, overlay, position, mimeType = _PhotoManipulatorTypes.MimeType.JPEG) => RNPhotoManipulator.overlayImage(ParamUtils.toImageNative(image), ParamUtils.toImageNative(overlay), position, mimeType),
  printText: (image, texts, mimeType = _PhotoManipulatorTypes.MimeType.JPEG) => RNPhotoManipulator.printText(ParamUtils.toImageNative(image), texts.map(ParamUtils.toTextOptionsNative), mimeType),
  optimize: (image, quality) => RNPhotoManipulator.optimize(ParamUtils.toImageNative(image), quality)
};
var _default = exports.default = PhotoManipulator;
//# sourceMappingURL=PhotoManipulator.js.map